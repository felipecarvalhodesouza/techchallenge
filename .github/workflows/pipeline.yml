name: GoodBurguer CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Etapa de build
        run: mvn clean compile test
        env:
          LOG_LEVEL: 'error'

  teste-integracao:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Etapa de testes de integracao
        run: mvn verify
        env: 
          DATABASE_URL : ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME : ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD : ${{ secrets.DATABASE_PASSWORD }}
          LOG_LEVEL: 'error'

  docker-artifact:
    runs-on: ubuntu-latest
    needs: [teste-integracao]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Etapa de empacotamento do projeto
        run: mvn package
        env:
          LOG_LEVEL: 'error'

      - name: Build Docker image
        run: docker build -t felipecarvalhodesouza/goodburguer:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        run: docker push felipecarvalhodesouza/goodburguer:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [tdocker-artifact]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup AWS Kubectl
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: aws eks --region us-east-1 update-kubeconfig --name goodburguer

      - name: List pods
        run: kubectl get pods


